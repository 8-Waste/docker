#
# This file was generated! Edits made directly to this file may be lost.
#   Timestamp:    2019-08-11
#
# RAPIDS Dockerfile for Ubuntu "devel" image
#
# RAPIDS is built from-source and installed in the base conda environment. The
# sources and toolchains to build RAPIDS are included in this image. RAPIDS
# jupyter notebooks are also provided, as well as jupyterlab and all the
# dependencies required to run them.
#
# Copyright (c) 2019, NVIDIA CORPORATION.

ARG CUDA_TYPE=devel
ARG CUDA_VERSION=10.0
ARG LINUX_VERSION=ubuntu18.04
ARG PYTHON_VERSION=3.7
FROM gpuci/miniconda-cuda:${CUDA_VERSION}-${CUDA_TYPE}-${LINUX_VERSION}-py${PYTHON_VERSION}

ARG ARROW_CPP_VERSION=0.14.1
ARG CC_VERSION=7
ARG CFFI_VERSION=1.11.5
ARG CMAKE_VERSION=3.14
ARG CXX_VERSION=7
ARG CYTHON_VERSION=0.29.*
ARG DASK_VERSION=">2"
ARG DASK_XGBOOST_CONDA_VERSION_SPEC=0.2*
ARG DISTRIBUTED_VERSION=">2"
ARG FAISSGPU_VERSION=1.5.0
ARG HASH_JOIN=ON
ARG IPYTHON_VERSION=7.3*
ARG NCCL_CONDA_VERSION=">2"
ARG NUMBA_VERSION=0.41
ARG NUMPY_VERSION=1.16.2
ARG NVIDIA_CONDA_LABEL=nvidia
ARG PANDAS_VERSION=0.24.2
ARG PYARROW_VERSION=0.14.1
ARG RAPIDSAI_CONDA_LABEL=rapidsai
ARG RAPIDS_CONDA_VERSION_SPEC=0.9*
ARG RAPIDSAI_NIGHTLY_CONDA_LABEL=rapidsai-nightly
ARG XGBOOST_CONDA_VERSION_SPEC=0.90.rapidsdev1
ARG XGBOOST_CONDA_LABEL=rapidsai/label/xgboost
ARG XGBOOST_VERSION=0.90

ARG CUDA_VERSION
ARG CUDA_MAJORMINOR_VERSION=${CUDA_VERSION}
ARG PARALLEL_LEVEL
ARG PYTHON_VERSION

ENV CC=/usr/bin/gcc-${CC_VERSION}
ENV CXX=/usr/bin/g++-${CXX_VERSION}
ENV CUDAHOSTCXX=$CXX
ENV CUDA_VERSION=${CUDA_MAJORMINOR_VERSION}
ENV RAPIDS_DIR=/rapids

RUN export CUDA_MAJOR=`echo $CUDA_VERSION | cut -d'.' -f1` && \
    export CUDA_MINOR=`echo $CUDA_VERSION | cut -d'.' -f2` && \
    conda install -y \
      -c ${RAPIDSAI_CONDA_LABEL} \
      -c ${RAPIDSAI_NIGHTLY_CONDA_LABEL} \
      -c ${NVIDIA_CONDA_LABEL} \
      -c nvidia \
      -c numba \
      -c conda-forge \
      -c pytorch \
      -c defaults \
      nomkl \
      arrow-cpp=${PYARROW_VERSION} \
      bokeh \
      cffi=${CFFI_VERSION} \
      cmake=${CMAKE_VERSION} \
      cmake_setuptools">=0.1.3" \
      cuda${CUDA_MAJOR}${CUDA_MINOR} \
      cudatoolkit=${CUDA_MAJORMINOR_VERSION} \
      cython=${CYTHON_VERSION} \
      dask=${DASK_VERSION} \
      dask-labextension \
      distributed=${DISTRIBUTED_VERSION} \
      double-conversion \
      dlpack \
      flatbuffers \
      ipython=${IPYTHON_VERSION} \
      jupyterlab \
      libclang \
      liblapack \
      make \
      matplotlib \
      nccl=${NCCL_CONDA_VERSION} \
      networkx \
      nodejs \
      numba=${NUMBA_VERSION} \
      numpy=${NUMPY_VERSION} \
      conda-forge::blas=1.1=openblas \
      pandas=${PANDAS_VERSION} \
      pyarrow=${PYARROW_VERSION} \
      pytest \
      rapidjson \
      scikit-learn \
      scipy=${SCIPY_VERSION} \
      seaborn \
      tensorflow \
    && conda clean -afy \
    && chmod -R ugo+w /opt/conda

# Special case: libcumlmg is not available for CUDA 9.2
RUN if [ "${CUDA_MAJORMINOR_VERSION}" != "9.2" ]; then conda install -y --no-deps -c ${NVIDIA_CONDA_LABEL} -c conda-forge libcumlmg; fi

RUN jupyter labextension install dask-labextension

# 'rapidsdevtool.sh buildDockerImage' sets up the build context, including the
#  rapids directory being COPY'd below. See rapidsdevtool.sh help for details.
RUN mkdir -p ${RAPIDS_DIR}
COPY rapids ${RAPIDS_DIR}
COPY utils ${RAPIDS_DIR}/utils
# Add test file for testing notebooks from within the container
COPY supportfiles/test.sh /test.sh

# clone.sh is generated by `rapidsdevtool.sh buildDockerImage` and is based on
# the URLs and branch names in the repoSettings file.
RUN cd ${RAPIDS_DIR} && ./clone.sh

# xgboost build will not find nccl in the conda env without this env var
ENV NCCL_ROOT=/opt/conda/envs/rapids

# Assume the build.sh script is present.
# (this is done automatically when using 'rapidsdevtool.sh buildDockerImage',
#  see rapidsdevtool.sh help for more details)
RUN cd ${RAPIDS_DIR}/rmm && \
    ./build.sh
RUN cd ${RAPIDS_DIR}/custrings && \
    ./build.sh
RUN cd ${RAPIDS_DIR}/cudf && \
    ./build.sh
RUN cd ${RAPIDS_DIR}/cuml && \
    ./build.sh
RUN cd ${RAPIDS_DIR}/cugraph && \
    ./build.sh
RUN cd ${RAPIDS_DIR} && \
    ./build.sh xgboost
RUN cd ${RAPIDS_DIR} && \
    ./build.sh dask-xgboost
RUN cd ${RAPIDS_DIR} && \
    ./build.sh dask-cuda

WORKDIR ${RAPIDS_DIR}/notebooks
# Jupyter notebook port
EXPOSE 8888
# Dask Scheduler Bokeh port
EXPOSE 8787
EXPOSE 8786

ENTRYPOINT [ "/usr/bin/tini", "--" ]

# Set the env startup script var for non-interactive shells
ENV BASH_ENV=/.activate_rapids

# Set the default command to pass to the ENTRYPOINT if no command was given
CMD [ "/bin/bash" ]

# Copy Dockerfile as late as possible to avoid invalidating cache for trivial changes
COPY Dockerfile.ubuntu-devel /Dockerfile.ubuntu-devel
