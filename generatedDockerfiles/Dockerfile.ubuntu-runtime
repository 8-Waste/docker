#
# This file was generated! Edits made directly to this file may be lost.
#   Generator:    /home/nfs/rratzel/Projects/build/commands/../commands/utils/genfile.sh
#   Timestamp:    Wed Jun 12 09:53:59 PDT 2019
#   Template Dir: /home/nfs/rratzel/Projects/build/templates/docker
#
ARG CUDA_VERSION=10.0
ARG CUDA_MAJORMINOR_VERSION=${CUDA_VERSION}
ARG LINUX_VERSION=ubuntu18.04
# devel includes various required utilities (bunzip2, apt-utils, etc.)
FROM nvidia/cuda:${CUDA_VERSION}-devel-${LINUX_VERSION}

ARG CUDA_MAJORMINOR_VERSION

ARG ARROW_CPP_VERSION=0.12.1
ARG CC_VERSION=5
ARG CXX_VERSION=5
ARG CFFI_VERSION=1.11.5
ARG CMAKE_VERSION=3.14.3
ARG CYTHON_VERSION=0.29.*
ARG DASK_VERSION=1.2.2
ARG DISTRIBUTED_VERSION=1.28.0
ARG FAISSGPU_VERSION=1.5.0
ARG HASH_JOIN=ON
ARG IPYTHON_VERSION=7.3*
ARG LIBGCC_NG_VERSION=7.3.0
ARG LIBGFORTRAIN_NG_VERSION=7.3.0
ARG LIBSTDCXX_NG_VERSION=7.3.0
ARG MINICONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
ARG NUMBA_VERSION=0.41
ARG NUMPY_VERSION=1.16.2
ARG NVIDIA_CONDA_LABEL=nvidia/label/cuda${CUDA_MAJORMINOR_VERSION}
ARG RAPIDSAI_CONDA_LABEL=rapidsai/label/cuda${CUDA_MAJORMINOR_VERSION}
ARG RAPIDS_CONDA_VERSION_SPEC=0.8*
ARG XGBOOST_CONDA_VERSION_SPEC=0.90*
ARG DASK_XGBOOST_CONDA_VERSION_SPEC=0.2*
ARG PANDAS_VERSION=0.23.4
ARG PYARROW_VERSION=0.12.1
ARG PYTHON_VERSION=3.6
ARG SCIPY_VERSION=1.2.1
ARG SKLEARN_VERSION=0.20.3
ARG TINI_URL=https://github.com/krallin/tini/releases/download/v0.18.0/tini
ARG NUM_BUILD_CPUS=""
ARG UTILS_DIR=utils
ARG SUPPORT_FILES_DIR=supportfiles
ARG RAPIDS_SRC_DIR=/rapids

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64
ENV NUMBAPRO_NVVM=/usr/local/cuda/nvvm/lib64/libnvvm.so
ENV NUMBAPRO_LIBDEVICE=/usr/local/cuda/nvvm/libdevice
ENV PATH=$PATH:/conda/bin
ENV CC=/usr/bin/gcc-${CC_VERSION}
ENV CXX=/usr/bin/g++-${CXX_VERSION}
ENV CUDAHOSTCXX=$CXX
ENV CUDA_VERSION=${CUDA_MAJORMINOR_VERSION}

# FIXME: verify if this is needed
ENV DEBIAN_FRONTEND=noninteractive

# Update and add pkgs + user
RUN apt-get update -y --fix-missing && \
    apt-get upgrade -y && \
    apt-get -qq install apt-utils -y --no-install-recommends && \
    apt-get install -y \
      curl \
      gcc-${CC_VERSION} \
      g++-${CXX_VERSION} \
      git \
      libboost-all-dev \
      screen \
      tzdata \
      vim \
      wget \
      zlib1g-dev

RUN rm -rf /var/lib/apt/lists/*
RUN curl -L ${TINI_URL} -o /usr/bin/tini && \
    chmod +x /usr/bin/tini
# NOTE: Many/all of the package versions used below are defined in the
# "args" insertfile

# NOTE: assumes steps in "setup_conda" were run!

ARG RAPIDSAI_NIGHTLY_CONDA_LABEL=rapidsai-nightly/label/cuda${CUDA_MAJORMINOR_VERSION}

RUN mkdir -p ${RAPIDS_SRC_DIR}
COPY rapids ${RAPIDS_SRC_DIR}
COPY utils ${RAPIDS_SRC_DIR}/${UTILS_DIR}

RUN curl ${MINICONDA_URL} -o /miniconda.sh && \
    sh /miniconda.sh -b -p /conda && \
    conda update -n base conda && \
    rm -f /miniconda.sh



# Copy notebooks, remove git meta-data, EXPOSE ports, WORKDIR=/rapids/notebooks
########################################
# conda environment
# NOTE: use these mirrors for faster downloads
#       -c http://10.33.227.188:88/numba \
#       -c http://10.33.227.188:88/conda-forge \
RUN export CUDA_MAJOR=`echo $CUDA_VERSION | cut -d'.' -f1` && \
    export CUDA_MINOR=`echo $CUDA_VERSION | cut -d'.' -f2` && \
    conda create -n rapids python=${PYTHON_VERSION} && \
    conda install -n rapids -y \
      -c ${RAPIDSAI_CONDA_LABEL} \
      -c ${RAPIDSAI_NIGHTLY_CONDA_LABEL} \
      -c ${NVIDIA_CONDA_LABEL} \
      -c nvidia \
      -c rapidsai-nightly/label/xgboost \
      -c conda-forge \
      -c pytorch \
      -c defaults \
      bokeh \
      ipython=${IPYTHON_VERSION} \
      jupyterlab \
      matplotlib \
      networkx \
      numba=${NUMBA_VERSION} \
      numpy=${NUMPY_VERSION} \
      pandas=${PANDAS_VERSION} \
      pyarrow=${PYARROW_VERSION} \
      pytest \
      scikit-learn \
      scipy \
      seaborn \
      cmake=${CMAKE_VERSION} \
      cudatoolkit=${CUDA_MAJOR}.${CUDA_MINOR} \
      cudf=${RAPIDS_CONDA_VERSION_SPEC} \
      cuml=${RAPIDS_CONDA_VERSION_SPEC} \
      cugraph=${RAPIDS_CONDA_VERSION_SPEC} \
      xgboost=${XGBOOST_CONDA_VERSION_SPEC} \
      dask-cuda=${RAPIDS_CONDA_VERSION_SPEC} \
      dask-cudf=${RAPIDS_CONDA_VERSION_SPEC} \
      dask-cuml=${RAPIDS_CONDA_VERSION_SPEC} \
      dask-xgboost=${DASK_XGBOOST_CONDA_VERSION_SPEC} \
   && conda clean -a

# Enables "source activate conda"
SHELL ["/bin/bash", "-c"]

# Special case: libcumlmg is not available for CUDA 9.2
#RUN if [ "${CUDA_MAJORMINOR_VERSION}" != "9.2" ]; then conda install -n rapids -y --no-deps -c ${NVIDIA_CONDA_LABEL} -c conda-forge libcumlmg; fi

# Remove git repo data
RUN find ${RAPIDS_SRC_DIR} -mindepth 2 -type d -name ".git" | xargs rm -rf

# Add notebooks and test script
RUN cd ${RAPIDS_SRC_DIR} && ./clone.sh notebooks
COPY ${SUPPORT_FILES_DIR}/test.sh /test.sh

WORKDIR /rapids/notebooks
# Jupyter notebook port
EXPOSE 8888
# Dask Scheduler Bokeh port
EXPOSE 8787
EXPOSE 8786

# Automatically active conda env
RUN echo "source activate rapids" > ~/.bashrc

ENTRYPOINT [ "/usr/bin/tini", "--" ]
CMD [ "/bin/bash" ]
