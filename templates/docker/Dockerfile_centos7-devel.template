# RAPIDS Dockerfile for CentOS7 "devel" image
#
# RAPIDS is built from-source and installed in the base conda environment. The
# sources and toolchains to build RAPIDS are included in this image. RAPIDS
# jupyter notebooks are also provided, as well as jupyterlab and all the
# dependencies required to run them.
#
# Copyright (c) 2019, NVIDIA CORPORATION.

ARG CUDA_TYPE=devel
ARG CUDA_VERSION=10.1
ARG CUDA_MAJORMINOR_VERSION=${CUDA_VERSION}
ARG LINUX_VERSION=centos7
ARG PYTHON_VERSION=3.7

FROM gpuci/miniconda-cuda-rapidsenv:${CUDA_VERSION}-${CUDA_TYPE}-${LINUX_VERSION}-py${PYTHON_VERSION}

insertfile ../../dockerArgs

ARG CUDA_MAJORMINOR_VERSION
ARG PYTHON_VERSION

ENV RAPIDS_DIR=/rapids

# FIXME 20191002: remove this once gpuci base is rebuilt
RUN yum -y update \
    && yum -y install which patch numactl \
    && yum clean all

# Install local gcc7
insertfile gcc7_centos7

# Copy files needed by RAPIDS and 3rd parties for builds, test, and runtime.
RUN mkdir -p ${RAPIDS_DIR} ${GCC7_DIR}/lib64
COPY rapids ${RAPIDS_DIR}
COPY utils ${RAPIDS_DIR}/utils

# Install core pkgs for development (these will not be overwritten by next install)
insertfile conda_install_devel_deps

# Add compatible libm
COPY supportfiles/libm.so.6 ${GCC7_DIR}/lib64

# clone.sh is generated by `rapidsdevtool.sh buildDockerImage` and is based on
# the URLs and branch names in the repoSettings file.
RUN cd ${RAPIDS_DIR} && ./clone.sh

# Build RAPIDS

# Add /usr/local/cuda/* temporarily to LD_LIBRARY_PATH to support various build steps
# This will need to be removed later since it causes problems with certain runtime libs (numba.cuda)
ENV LD_LIBRARY_PATH_PREBUILD=${LD_LIBRARY_PATH}
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda/lib64:/usr/local/cuda/lib64/stubs

insertfile build_rapids

# Change LD_LIBRARY_PATH to exclude /usr/local/cuda/* since
# numba.cuda cannot load that, and instead have it load
# /lib64/libcuda.so instead
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH_PREBUILD}

COPY supportfiles/.run_in_rapids /.run_in_rapids
ENTRYPOINT [ "/usr/bin/tini", "--", "/.run_in_rapids" ]

# Set the default command to pass to the ENTRYPOINT if no command was given
CMD [ "/bin/bash" ]

# Setup notebook environment
insertfile setup_notebookenv

# Copy Dockerfile as late as possible to avoid invalidating cache for trivial changes
COPY Dockerfile.centos7-devel /Dockerfile.centos7-devel
