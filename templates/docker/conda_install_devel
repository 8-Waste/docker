RUN export CUDA_MAJOR=`echo $CUDA_VERSION | cut -d'.' -f1` && \
    export CUDA_MINOR=`echo $CUDA_VERSION | cut -d'.' -f2` && \
    conda install -y \
      -c ${RAPIDSAI_CONDA_LABEL} \
      -c ${RAPIDSAI_NIGHTLY_CONDA_LABEL} \
      -c ${NVIDIA_CONDA_LABEL} \
      -c nvidia \
      -c numba \
      -c conda-forge \
      -c pytorch \
      -c defaults \
      arrow-cpp=${PYARROW_VERSION} \
      bokeh \
      cffi=${CFFI_VERSION} \
      cmake=${CMAKE_VERSION} \
      cmake_setuptools">=0.1.3" \
      cuda${CUDA_MAJOR}${CUDA_MINOR} \
      cudatoolkit=${CUDA_MAJORMINOR_VERSION} \
      cython=${CYTHON_VERSION} \
      dask=${DASK_VERSION} \
      dask_labextension \
      distributed=${DISTRIBUTED_VERSION} \
      double-conversion \
      dlpack \
      faiss-gpu=${FAISSGPU_VERSION} \
      flatbuffers \
      ipython=${IPYTHON_VERSION} \
      jupyterlab \
      libclang \
      liblapack \
      make \
      matplotlib \
      nccl=${NCCL_CONDA_VERSION} \
      networkx \
      nodejs \
      numba=${NUMBA_VERSION} \
      numpy=${NUMPY_VERSION} \
      openblas \
      pandas=${PANDAS_VERSION} \
      pyarrow=${PYARROW_VERSION} \
      pytest \
      rapidjson \
      scikit-learn \
      scipy=${SCIPY_VERSION} \
      seaborn \
      tensorflow \
    && conda clean -afy && \
    chmod -R ugo+w /opt/conda

# Special case: libcumlmg is not available for CUDA 9.2
RUN if [ "${CUDA_MAJORMINOR_VERSION}" != "9.2" ]; then conda install -y --no-deps -c ${NVIDIA_CONDA_LABEL} -c conda-forge libcumlmg; fi

RUN jupyter labextension install dask-labextension
