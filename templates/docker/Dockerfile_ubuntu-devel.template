# RAPIDS Dockerfile for Ubuntu "devel" image
#
# RAPIDS is built from-source and installed in the base conda environment. The
# sources and toolchains to build RAPIDS are included in this image. RAPIDS
# jupyter notebooks are also provided, as well as jupyterlab and all the
# dependencies required to run them.
#
# Copyright (c) 2019, NVIDIA CORPORATION.

ARG CUDA_TYPE=devel
ARG CUDA_VERSION=10.1
ARG CUDA_MAJORMINOR_VERSION=${CUDA_VERSION}
ARG LINUX_VERSION=ubuntu18.04
ARG PYTHON_VERSION=3.7

FROM gpuci/miniconda-cuda-rapidsenv:${CUDA_VERSION}-${CUDA_TYPE}-${LINUX_VERSION}-py${PYTHON_VERSION}

ARG CUDA_MAJORMINOR_VERSION=${CUDA_VERSION}

insertfile ../../dockerArgs

ARG CUDA_MAJORMINOR_VERSION
ARG PYTHON_VERSION

ENV CC=/usr/bin/gcc-${CC_VERSION}
ENV CXX=/usr/bin/g++-${CXX_VERSION}
ENV CUDAHOSTCXX=$CXX
ENV RAPIDS_DIR=/rapids
ENV LD_LIBRARY_PATH=/opt/conda/envs/rapids/lib:${LD_LIBRARY_PATH}

# Install local gcc
insertfile gcc7_ubuntu

# 'rapidsdevtool.sh buildDockerImage' sets up the build context, including the
#  rapids directory being COPY'd below. See rapidsdevtool.sh help for details.
RUN mkdir -p ${RAPIDS_DIR}
COPY rapids ${RAPIDS_DIR}
COPY utils ${RAPIDS_DIR}/utils

# Install dependencies needed for devel: build deps + RAPIDS runtime deps +
# notebook deps.  This is done as a single install to ensure compatibility
# between packages.
#insertfile conda_install_devel
insertfile conda_install_devel_deps

# Install dependencies for builds
#insertfile conda_install_rapids_deps

# clone.sh is generated by `rapidsdevtool.sh buildDockerImage` and is based on
# the URLs and branch names in the repoSettings file.
RUN cd ${RAPIDS_DIR} && ./clone.sh

# Build RAPIDS
insertfile build_rapids

COPY supportfiles/.run_in_rapids /.run_in_rapids
ENTRYPOINT [ "/usr/bin/tini", "--", "/.run_in_rapids" ]

# Set the default command to pass to the ENTRYPOINT if no command was given
CMD [ "/bin/bash" ]

# Add notebook dependencies
#insertfile conda_install_notebookenv
insertfile setup_notebookenv

# Copy Dockerfile as late as possible to avoid invalidating cache for trivial changes
COPY Dockerfile.ubuntu-devel /Dockerfile.ubuntu-devel
